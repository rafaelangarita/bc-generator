#!/usr/bin/env node

/**
 * @file
 * Binding Component implementation automatically generated by
 * the Social Communication Platform.
 *
 * Characteristics:
 * - Type: AMQP subscriber.
 * - Social Communication Platform Bus: AMQP.
 */

var amqp = require('amqplib/callback_api');
var conf = require('./conf/amqp-endpoint.conf');
var out = require(VAR_SENDER);


/**
 * Receives a message from a Social Entity.
 * After receiving a message, it forwards it
 * to the Social Communication Platform Bus.
 * Protocol: AMQP.
 */

exports.listen = function() {

    connection = 'amqp://' + conf.user + ':' + conf.password +
        '@' + conf.address + ':' + conf.port;
    amqp.connect(connection, function(err, conn) {
        conn.createChannel(function(err, ch) {
            ex = VAR_QUEUE;
            ch.assertExchange(ex, conf.exchange.type, {
                durable: true
            });
            ch.assertQueue(VAR_QUEUE, {
                exclusive: true
            }, function(err, q) {
                console.log(" [*] Waiting for messages in %s. To exit press CTRL+C", q.queue);
                ch.bindQueue(q.queue, ex, '');

                ch.consume(q.queue, function(msg) {
                    console.log(" [x] %s", msg.content.toString());
                    out.post(msg.content.toString());
                });

            }, {
                noAck: true
            });
        });
    });
};
